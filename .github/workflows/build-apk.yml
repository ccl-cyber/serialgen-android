name: Build APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    name: Build APK with Manual SDK Setup
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install system dependencies
      run: |
        sudo apt update -y
        sudo apt install -y openjdk-8-jdk-headless git build-essential libffi-dev libssl-dev \
          libgstreamer-plugins-base1.0-dev libgstreamer1.0-dev libmtdev-dev \
          libxcursor-dev libxinerama-dev libxrandr-dev libxss-dev libgtk-3-dev \
          libjpeg-dev libtiff-dev libopenjp2-7-dev libharfbuzz-dev libfribidi-dev \
          libxcb1-dev libegl1-mesa-dev libpng-dev libfreetype6-dev

    - name: Set Java & SDK Environment
      run: |
        echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
        echo "ANDROID_NDK_HOME=$HOME/android-ndk" >> $GITHUB_ENV
        echo "JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64" >> $GITHUB_ENV
        echo "PATH=$PATH:$ANDROID_HOME/tools/bin:$ANDROID_HOME/platform-tools" >> $GITHUB_PATH

    - name: Download Android Command-line Tools
      run: |
        mkdir -p $ANDROID_HOME
        curl -o sdk-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip
        unzip sdk-tools.zip -d $ANDROID_HOME
        rm sdk-tools.zip

    - name: Accept Android Licenses
      run: |
        mkdir -p $ANDROID_HOME/licenses
        echo "8933bad161af4178b1185d1a37fbf41ea5269c55" > $ANDROID_HOME/licenses/android-sdk-license
        echo "d56f5187479451eabf01fb78af6dfcb131a6481e" >> $ANDROID_HOME/licenses/android-sdk-license

    - name: Install Android SDK & Build Tools
      run: |
        # Install sdkmanager
        yes | $ANDROID_HOME/cmdline-tools/bin/sdkmanager --sdk_root=$ANDROID_HOME --install "platform-tools" "build-tools;30.0.3" "platforms;android-30" "cmdline-tools;latest"

    - name: Install Python dependencies
      run: |
        pip install --upgrade pip
        pip install Cython==0.29.33
        pip install buildozer

    - name: Ensure buildozer.spec exists
      run: |
        if [ ! -f buildozer.spec ]; then
          echo "‚ùå Error: buildozer.spec not found!"
          exit 1
        fi

    - name: Run Buildozer
      run: |
        buildozer android debug

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        path: bin/*.apk
        if-no-files-found: error
        retention-days: 7

    - name: Create Release
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        VERSION=$(grep -E "^version" buildozer.spec | cut -d'=' -f2 | xargs)
        TAG="v$VERSION"
        gh release delete "$TAG" --yes || true
        gh release create "$TAG" \
          --title "Release $VERSION" \
          --notes "Auto-built APK from GitHub Actions" \
          bin/*.apk
