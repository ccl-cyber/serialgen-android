name: Build APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    name: Build APK for Android
    runs-on: ubuntu-latest

    env:
      ANDROID_SDK_ROOT: $HOME/android-sdk
      ANDROID_NDK_HOME: $HOME/android-ndk
      JAVA_HOME: /usr/lib/jvm/java-17-openjdk-amd64

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install system dependencies
      run: |
        sudo apt update -y
        sudo apt install -y autoconf automake libtool libtool-bin m4 libltdl-dev openjdk-17-jdk unzip git build-essential \
          libffi-dev libssl-dev libgstreamer-plugins-base1.0-dev libgstreamer1.0-dev libmtdev-dev libxcursor-dev libxinerama-dev \
          libxrandr-dev libxss-dev libgtk-3-dev libjpeg-dev libtiff-dev libopenjp2-7-dev libharfbuzz-dev libfribidi-dev \
          libxcb1-dev libegl1-mesa-dev libpng-dev libfreetype6-dev wget

    - name: Install Android cmdline-tools
      run: |
        mkdir -p $ANDROID_SDK_ROOT/cmdline-tools
        cd $ANDROID_SDK_ROOT/cmdline-tools
        wget https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O cmdline-tools.zip
        unzip cmdline-tools.zip
        mv cmdline-tools latest
        rm cmdline-tools.zip

    - name: Update PATH
      run: echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> $GITHUB_PATH

    - name: Accept Android licenses
      run: yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --licenses

    - name: Install SDK Components
      run: |
        $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager "platform-tools" "build-tools;34.0.0" "platforms;android-34"

    - name: Symlink SDK for Buildozer
      run: |
        mkdir -p ~/.buildozer/android/platform
        ln -sf $ANDROID_SDK_ROOT ~/.buildozer/android/platform/android-sdk

    - name: Install Python dependencies
      run: |
        pip install --upgrade pip
        pip install Cython==0.29.33 buildozer

    - name: Check buildozer.spec presence
      run: |
        if [ ! -f buildozer.spec ]; then
          echo "‚ùå buildozer.spec not found! Run 'buildozer init' locally, configure it, and commit."
          exit 1
        fi

    - name: Run Buildozer to build APK
      run: buildozer android debug

    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        path: bin/*.apk
        if-no-files-found: error
        retention-days: 7

    - name: Create GitHub Release
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        VERSION=$(grep -E "^version" buildozer.spec | cut -d'=' -f2 | xargs)
        TAG="v$VERSION"
        gh release delete "$TAG" --yes || true
        gh release create "$TAG" \
          --title "Release $VERSION" \
          --notes "Auto-built APK from GitHub Actions" \
          bin/*.apk
